echo '''
╦ ╦╦╔╦╗╔═╗╦╔═╦ ╦╔╦╗╔═╗
╠═╣║ ║║║╣ ╠╩╗║ ║║║║╠═╣
╩ ╩╩═╩╝╚═╝╩ ╩╚═╝╩ ╩╩ ╩
'''

# check mac m1
if [[ $(uname -m) == 'arm64' ]]; then
    eval $(/opt/homebrew/bin/brew shellenv)
fi

# CHECK PLATFORM
[ -z ${PLATFORM+x}  ] && export PLATFORM=$(uname -s)
if [ "$PLATFORM" = 'Darwin'  ]; then
    # MAC
    # mysql
    # export PATH="/usr/local/opt/mysql@5.7/bin:$PATH"
    export EDITOR=nvim
else
    # Else
    export EDITOR=vim
fi

export PATH="/usr/local/sbin:$PATH"

# Pyenv (Python)
export PYENV_ROOT="$HOME/.pyenv"
export PATH="$PYENV_ROOT/bin:$PATH"
export PYTHON_CONFIGURE_OPTS="--enable-shared"
eval "$(pyenv init -)"
# pyenv 2~
eval "$(pyenv init --path)"

# Rbenv (Ruby)
# export PATH="$HOME/.rbenv/bin:$PATH"
# eval "$(rbenv init -)"

# Jenv (Java)
# export PATH="$HOME/.jenv/bin:$PATH"
# eval "$(jenv init -)"

# Nvm (Node Version Manager)
export NVM_DIR="$HOME/.nvm"

# Homebrew 설치 경로 기준 (Apple Silicon: /opt/homebrew)
[ -s "/opt/homebrew/opt/nvm/nvm.sh" ] && \. "/opt/homebrew/opt/nvm/nvm.sh"  # nvm 로드
[ -s "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm" ] && \. "/opt/homebrew/opt/nvm/etc/bash_completion.d/nvm"  # 자동완성

# Virtualenv & Virtualenv Wrapper
export WORKON_HOME=~/.virtualenvs
export VIRTUALENVWRAPPER_PYTHON=$(which python3)
export VIRTUALENVWRAPPER_VIRTUALENV=~/.local/bin/virtualenv
source ~/.local/bin/virtualenvwrapper.sh


### MANAGED BY RANCHER DESKTOP START (DO NOT EDIT)
# export PATH="/Users/joseph/.rd/bin:$PATH"
### MANAGED BY RANCHER DESKTOP END (DO NOT EDIT)

# OPEN AI
# export OPENAI_API_HOST="api.openai.com"

# source /usr/local/share/zsh-autosuggestions/zsh-autosuggestions.zsh

# Aliases
alias vi=$EDITOR
alias vim=$EDITOR
alias dkr=docker
alias dkrp='docker-compose'
alias tg='terragrunt'
alias tf='terraform'
alias tfp='terraform plan'
alias tfw='terraform workspace'
alias tfi='terraform import'
alias tfs='terraform state'
# alias dkr=nerdctl
# alias dkrp='nerdctl compose'
alias ws='cd ~/Documents/workspace'
alias dotfiles='cd ~/dotfiles'
alias k=kubectl
alias ta='tmux attach'
alias cat='bat'
alias ls="lsd"
alias ll="lsd -l"
alias lt="lsd --tree -I '__pycache__' -I 'node_modules'"
alias lg="lazygit"


# for auto completion of kubectx, kubens
autoload -U compinit && compinit

bindkey "^[a" beginning-of-line
bindkey "^[e" end-of-line

# iterm2 > preference > key mapping > option + [left | right] -> send [D | C]
bindkey "^[D" backward-word # ⌥←
bindkey "^[C" forward-word # ⌥→

## Ctags
# alias ctagsphp='ctags -R --fields=+aimlS --languages=php'
# alias ctagspy="ctags -R --fields=+l --languages=python --python-kinds=-iv -f ./tags . $(python -c "import os, sys; print(' '.join('{}'.format(d) for d in sys.path if os.path.isdir(d)))")"

# GCP
# The next line updates PATH for the Google Cloud SDK.
# if [ -f '/Users/hidekuma/Documents/google-cloud-sdk/path.zsh.inc' ]; then . '/Users/hidekuma/Documents/google-cloud-sdk/path.zsh.inc'; fi
# The next line enables shell command completion for gcloud.
# if [ -f '/Users/hidekuma/Documents/google-cloud-sdk/completion.zsh.inc' ]; then . '/Users/hidekuma/Documents/google-cloud-sdk/completion.zsh.inc'; fi
