" settings
set nocompatible              " be iMproved, required
filetype off                  " required
syntax on
set nu
set autoindent
set smartindent
set ignorecase
set tabstop=2
set shiftwidth=2
set expandtab
set showcmd
set showmatch
set title
set ruler
set incsearch
set hlsearch
set cursorline
set cursorcolumn
set encoding=utf-8
set fileencodings=utf-8,euckr
set backspace=indent,eol,start
set clipboard=unnamed " use OS clipboard -- brew install reattach-to-user-namespace
set whichwrap+=<,>,h,l   
set report=0  
set wildmenu  
set laststatus=2
set lazyredraw
set smarttab

autocmd BufNewFile,BufRead *.xt,*.xd setf xml
autocmd BufNewFile,BufRead *.tpl,*.page setf html
autocmd FileType html setlocal tabstop=4 softtabstop=4 shiftwidth=4 expandtab autoindent
autocmd FileType php setlocal tabstop=4 softtabstop=4 shiftwidth=4 expandtab autoindent
autocmd FileType javascript setlocal tabstop=4 softtabstop=4 shiftwidth=4 expandtab

" Function for autodetecting tab settings
function Kees_settabs()
    if len(filter(getbufline(winbufnr(0), 1, "$"), 'v:val =~ "^\\t"')) > len(filter(getbufline(winbufnr(0), 1, "$"), 'v:val =~ "^ "'))
        set noet
    else
        set et
    endif
endfunction
autocmd BufReadPost * call Kees_settabs()

if isdirectory(expand("~/.vim/bundle/Vundle.vim/"))
  " set vundle
  set rtp+=~/.vim/bundle/Vundle.vim
  call vundle#begin()

  " let Vundle manage Vundle, required
  Plugin 'VundleVim/Vundle.vim' "basic
  Plugin 'scrooloose/nerdtree'
  Plugin 'vim-airline/vim-airline'
  Plugin 'airblade/vim-gitgutter'
  Plugin 'scrooloose/syntastic'
  Plugin 'nanotech/jellybeans.vim'  "theme
  Plugin 'chriskempson/vim-tomorrow-theme' "theme
  Plugin 'nightsense/snow' "theme

  "Plugin 'Valloric/YouCompleteMe'
  Plugin 'terryma/vim-multiple-cursors'
  Plugin 'rkulla/pydiction'
  Plugin 'tpope/vim-fugitive'
  Plugin 'kchmck/vim-coffee-script'
  "Plugin 'Raimondi/delimitMate' "{}
  Plugin 'majutsushi/tagbar'
  Plugin 'ctrlpvim/ctrlp.vim'
  Plugin 'nathanaelkane/vim-indent-guides'

  " Editing utilities
  Plugin 'tpope/vim-surround'
  Plugin 'tpope/vim-repeat'

  " Movement
  Plugin 'Lokaltog/vim-easymotion'
  Plugin 'vim-scripts/matchit.zip'

  " Syntax / Indenting
  Plugin 'chr4/nginx.vim'
  Plugin 'plasticboy/vim-markdown'
  Plugin 'groenewege/vim-less'

  " PHP / Yii
  Plugin 'pangloss/vim-javascript'
  Plugin 'mikehaertl/pdv-standalone'
  Plugin 'StanAngeloff/php.vim'
  Plugin '2072/PHP-Indenting-for-VIm'
  Plugin 'shawncplus/phpcomplete.vim'

  call vundle#end()            " required
  filetype plugin indent on    " required

  "end vundle
  let g:pydiction_location = '~/.vim/bundle/pydiction/complete-dict'
  let g:pydiction_menu_height = 10
  "theme
  set background=dark
  let g:airline_theme='snow_dark'
  let g:lightline = { 'colorscheme': 'snow_dark' }
  color jellybeans
  "color snow 
  "color Tomorrow-Night-Blue
  "color Tomorrow-Night-Bright

  nmap ,nt :NERDTree<CR>

  "vim-multiple-cursor
  let g:multi_cursor_use_default_mapping=0
  " Default mapping
  let g:multi_cursor_next_key='<C-n>'
  let g:multi_cursor_prev_key='<C-p>'
  let g:multi_cursor_skip_key='<C-x>'
  let g:multi_cursor_quit_key='<Esc>'

  "vim-indent-guides
  let g:indent_guides_enable_on_vim_startup = 1
  let g:indent_guides_auto_colors = 0
  let g:indent_guides_exclude_filetypes = ['help', 'nerdtree']
  "hi IndentGuidesOdd ctermbg=White
  "hi IndentGuidesEven ctermbg=LightCyan
  let g:indent_guides_guide_size = 1 
  let g:indent_guides_start_level = 2

  "highlight line number
  hi LineNr ctermfg=white cterm=bold

  "highlight cursor color
  set cursorcolumn 
  set cursorline 
  hi CursorColumn ctermbg=NONE
  hi CursorLine ctermbg=Black cterm=bold

  "tagbar
  nmap <F8> :TagbarToggle<CR>

  " When editing a file, always jump to the last cursor position.
  autocmd BufReadPost * if line("'\"") && line("'\"") <= line("$") | exe "normal `\"" | endif

  " PHP settings
  " Let the surround plugin use `-` for <?php ?>
  autocmd FileType php let b:surround_45 = "<?php \r ?>"
  " Let the surround plugin use `=` for <?= ?>
  autocmd FileType php let b:surround_61 = "<?= \r ?>"
  " Fix javascript word boundaries (erratically activated for PHP files): exclude $
  autocmd FileType php setlocal iskeyword-=$

  " tpope/vim-surround
  let g:surround_indent = 0           " Make indenting on block selection + S work

  " StanAngeloff/php.vim
  let php_sql_query = 1               " Highlight SQL inside strings
  let php_parent_error_close = 1      " Highlight parent error ] or )
  let php_parent_error_open = 1       " Skip php end tag if there's an unclosed ( or [
  let php_folding = 0                 " No folding
  let php_sync_method = 0             " Sync from start

  " 2072/PHP-Indenting-for-VIm
  let g:PHP_outdentphpescape = 0      " Indent PHP tags as the surrounding non-PHP code
  let g:PHP_noArrowMatching = 1       " Don't align arrows of chained method calls
  let g:PHP_vintage_case_default_indent = 1   " Indent case: and default: in switch()

  " vim-scripts/matchit
  let b:match_ignorecase = 1

  " PDV (PHP Documentor)
  nnoremap <C-K> :call PhpDocSingle()<CR>
  vnoremap <C-K> :call PhpDocRange()<CR>

  "ctrlp
  set wildignore+=*/tmp/*,*.so,*.swp,*.zip     " MacOSX/Linux
  set wildignore+=*\\tmp\\*,*.swp,*.zip,*.exe  " Windows

  " not working.. why?
  "let g:ctrlp_custom_ignore = {
  "  \ 'dir':  '\.git$\\.(__pycache__|node_moudles|DS_Store|tmp|log|logs|gitlab|git|hg|svn)$',
  " \ 'file': '\.(swp|pyc|exe|so|dll)$'
  "\ }
  let g:ctrlp_user_command = ['.git/', 'git --git-dir=%s/.git ls-files -oc --exclude-standard'] 
  "let g:ctrlp_user_command = 'find %s -type f'        " MacOSX/Linux
  "let g:ctrlp_user_command = 'dir %s /-n /b /s /a-d'  " Windows

  let g:ctrlp_working_path_mode = 'ra'
  "let g:ctrlp_by_filename = 1
  let g:ctrlp_match_window = 'min:0,max:30'
  
  " php auto complete
  let g:phpcomplete_mappings = {
     \ 'jump_to_def': '<C-]>',
     \ 'jump_to_def_split': '<C-W><C-]>',
     \ 'jump_to_def_vsplit': '<C-W><C-\>',
     \ 'jump_to_def_tabnew': '<C-W><C-[>',
     \}

endif
